import React, { Component } from 'react';import {    StyleSheet,    Text,    View,    TextInput,    TouchableOpacity,    Dimensions,    Image,    ScrollView,    Linking,    CameraRoll,    PermissionsAndroid,    Platform} from 'react-native';import { showToast, ErrorHandle, Header } from '../../../mesosphere';const isAndroid = Platform.OS != 'ios';let RNFetchBlob = null;if (isAndroid) {    RNFetchBlob = require('react-native-fetch-blob').default;}export default class ScanQrCode extends Component {    constructor(props) {        super(props);        console.log(this.props);        this.rechargeInfo = props.params.rechargeInfo;        this.payAccount = props.params.payAccount;        this.saveQrCode = this.saveQrCode.bind(this);        this.screenShot = this.screenShot.bind(this);    }    async requestPermission () {        try {            let result = await PermissionsAndroid.request(                PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE,                {                    title: ' 权限请求 ',                    message: ' 该应用需要如下权限 ' + ' 保存图片 ' + ' 请授权! '                },            );            if (result) {                this.saveQrCode()            }        } catch (err) {            showToast(err);        }    };    fetchImageBlob() {        return new Promise ((resolve, reject) => {            if (!isAndroid) {                resolve();            } else {                RNFetchBlob                    .config({fileCache : true, appendExt : 'png'})                    .fetch('GET', this.payAccount.qrCodeUrl)                    .then(res => {                        this.payAccount.qrCodeUrl = res.path();                        return resolve();                    })                    .catch(err => reject(err))            }        });    };    saveQrCode () {        this.fetchImageBlob()            .then(() => CameraRoll.saveToCameraRoll(this.payAccount.qrCodeUrl))            .then(() => showToast('保存成功'))            .catch(err => {                console.log('save qr code image', err);                showToast('保存图片出错，您还可以截图保存二维码');            })    };    screenShot() {        isAndroid ? this.requestPermission() : this.saveQrCode();    };    render () {        return (            <ScrollView style={styles.container}>                <View style={styles.padding10}>                    <Text style={styles.info}>充值金额：{this.rechargeInfo.amount}</Text>                    <Text style={styles.info}>{this.rechargeInfo.shortName}账号：{this.payAccount.account}</Text>                    <View style={styles.codeImage}>                        <Image style={styles.imageCode} source={{uri: this.payAccount.qrCodeUrl}} />                    </View>                </View>                < View style={styles.btnBar}>                    <TouchableOpacity style={styles.btn} onPress={this.screenShot}>                        <Text style={styles.btnTitle}>立即扫码加好友</Text>                    </TouchableOpacity>                </View>                <View style={styles.padding10}>                    <Text style={styles.info}>扫码步骤：</Text>                    <Text style={styles.info}>1.点“立即扫码加好友”将自动为您截屏并保存到相册。</Text>                    <Text style={styles.info}>2.请在{this.rechargeInfo.shortName}中打开“扫一扫”。</Text>                    <Text style={styles.info}>3.在扫一扫中点击右上角，选择“从相册选取二维码”选取截屏的图片。</Text>                    <Text style={styles.info}>4.输入您欲充值点金额并进行转账。</Text>                    <Text style={styles.info}>5.支付完成以后请到（已支付，我要提单）填写验证信息</Text>                    <Text style={styles.info}>6.如果充值未及时到账请联系在线客服</Text>                </View>            </ScrollView>        )    }}const styles = StyleSheet.create({    container: {        flex: 1,        backgroundColor: '#FFF',        //borderTopWidth: StyleSheet.hairlineWidth,        //borderTopColor: '#E1E1E1'    },    padding10: {        padding: 10,    },    info: {        fontSize: 14,        marginBottom: 5,    },    codeImage: {        flexDirection: 'row',        justifyContent: 'center',        alignItems: 'center',        marginTop: 20,    },    imageCode: {        width: 180,        height: 180,        backgroundColor: '#FFF'    },    btnBar: {        flexDirection: 'row',        justifyContent: 'center',        alignItems: 'center',        marginVertical: 10,    },    btn: {        backgroundColor: '#17A84B',        paddingVertical: 3,        borderRadius: 5,        marginHorizontal: 15,    },    btnTitle: {        fontSize: 16,        paddingVertical: 8,        paddingHorizontal: 20,        color: '#FFF'    }});